FROM {{ os_name }}:{{ os_version }}

LABEL tailor="bundle"

SHELL ["/bin/bash", "-c"]

ENV DEBIAN_FRONTEND noninteractive
ENV PYTHONUNBUFFERED 1

RUN apt-get update && apt-get install --no-install-recommends -y locales curl gnupg sudo ccache software-properties-common
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8

RUN apt-get update && apt-get install --no-install-recommends -y ccache && \
    ccache -M 5G && \
    ccache --set-config=cache_dir=/ccache

# TODO(pbovbel) create a locus repository mirror,
# Pull python-catkin*
RUN echo "deb [arch=amd64] http://repositories.ros.org/ubuntu/testing/ {{ os_version }} main" > /etc/apt/sources.list.d/ros-latest.list && \
    curl --silent http://repositories.ros.org/repos.key | apt-key add -

# Pull libopensplice*
RUN echo "deb [arch=amd64] http://repo.ros2.org/ubuntu/main {{ os_version }} main" > /etc/apt/sources.list.d/ros2-latest.list && \
    curl --silent http://repo.ros2.org/repos.key | apt-key add -

# Pull gazebo*, libgazebo*
RUN echo "deb [arch=amd64] http://packages.osrfoundation.org/gazebo/ubuntu-stable {{ os_version }} main" > /etc/apt/sources.list.d/gazebo-latest.list && \
    curl --silent http://packages.osrfoundation.org/gazebo.key | apt-key add -

{% if os_version == 'xenial' %}
# Pull opencv 3 for xenial. Hacks, hacks, and more hacks.
RUN add-apt-repository -y ppa:lkoppel/opencv
{% endif %}

# Install build tool
RUN apt-get update && apt-get install --no-install-recommends -y \
  python3-dev \
  python3-pip \
  python3-setuptools \
  python3-wheel \
  git

RUN pip3 install -U \
  pip \
  setuptools \
  colcon-common-extensions

# TODO(pbovbel) Get PKG_CONFIG_PATH fix
RUN pip3 install -U --force-reinstall --no-deps    \
  git+https://github.com/colcon/colcon-pkg-config.git

RUN colcon metadata add default https://raw.githubusercontent.com/colcon/colcon-metadata-repository/master/index.yaml && \
    colcon metadata update

# install build and run dependencies
# TODO(pbovbel) apt doesn't allow installing constrained dependencies, remove regex_replace
RUN apt-get update && apt-get install --no-install-recommends -y \
  {{ build_depends | union(run_depends) | sort | join(' ') | regex_replace('\(.*?\)', '') }}

RUN groupadd -r tailor && useradd -ms /bin/bash -g tailor -G sudo tailor
USER tailor

RUN ccache -M 5G && \
    ccache --set-config=cache_dir=/ccache
